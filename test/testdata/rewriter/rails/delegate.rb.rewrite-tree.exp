class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C GoodUsages><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def foo<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def bar<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def baz<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def ball<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def string_foo<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def string_bar<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def symbol_foo<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def symbol_bar<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def true_foo<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def true_bar<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(<self>) do ||
      <self>.void()
    end

    def usages<<C <todo sym>>>(&<blk>)
      begin
        <self>.foo() do ||
          <emptyTree>
        end
        <self>.bar(1, 3, 4, 5)
        <self>.baz()
        <self>.ball(:"thing", 0) do ||
          <emptyTree>
        end
        <self>.string_foo()
        <self>.string_bar()
        <self>.symbol_foo() do ||
          <emptyTree>
        end
        <self>.symbol_bar(1, 2) do ||
          <emptyTree>
        end
        <self>.true_foo()
        <self>.true_bar()
      end
    end

    <self>.extend(<emptyTree>::<C T>::<C Sig>)

    ::Sorbet::Private::Static.keep_def(<self>, :"foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"bar")

    ::Sorbet::Private::Static.keep_def(<self>, :"baz")

    ::Sorbet::Private::Static.keep_def(<self>, :"ball")

    ::Sorbet::Private::Static.keep_def(<self>, :"string_foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"string_bar")

    ::Sorbet::Private::Static.keep_def(<self>, :"symbol_foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"symbol_bar")

    ::Sorbet::Private::Static.keep_def(<self>, :"true_foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"true_bar")

    ::Sorbet::Private::Static.keep_def(<self>, :"usages")
  end

  class <emptyTree>::<C WorksWithoutExtendingTSig><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def foo<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def bar<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    ::Sorbet::Private::Static.keep_def(<self>, :"foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"bar")
  end

  class <emptyTree>::<C IgnoredUsages><<C <todo sym>>> < (::<todo sym>)
    local = 0

    <self>.not_delegate(:"thing", :"to", :"nop")

    <self>.delegate()

    <self>.delegate(:"thing")

    <self>.delegate(:"to", :"thing")

    <self>.delegate(:"thing", :"prefix", :"thing")

    <self>.delegate(:"foo", :"to", :"thing", :"prefix", local)

    <self>.delegate(:"foo", local, :"thing")

    <self>.delegate(234, :"to", :"good")

    <self>.delegate(:"thing", :"thing")

    <self>.delegate(:"foo", :"bar", :"to", :"@hi", :"prefix", true)

    <self>.delegate(:"foo", :"bar", :"to", "", :"prefix", true)
  end

  class <emptyTree>::<C EnumerableUsage><<C <todo sym>>> < (::<todo sym>)
    ::Sorbet::Private::Static.sig(::T::Sig::WithoutRuntime) do ||
      <self>.params(:"arg0", ::T.untyped(), :"<blk>", ::T.nilable(::Proc)).returns(::T.untyped())
    end

    def each<<C <todo sym>>>(*arg0, &<blk>)
      <emptyTree>
    end

    <self>.extend(<emptyTree>::<C T>::<C Generic>)

    <self>.include(<emptyTree>::<C Enumerable>)

    <emptyTree>::<C Elem> = <self>.type_member()

    ::Sorbet::Private::Static.keep_def(<self>, :"each")
  end
end
